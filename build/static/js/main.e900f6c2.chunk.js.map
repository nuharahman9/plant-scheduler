{"version":3,"sources":["components/Firebase/config.js","components/Firebase/db.js","components/Nav/AddPlant.js","components/Nav/navbar.js","components/PlantList/EditPlant.js","components/PlantList/PlantList.js","components/User/Login.js","App.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","databaseURL","appId","measurementId","storage","auth","db","firestore","AddPlant","props","useState","id","name","species","lastwatered","wateringfrequency","notes","newPlant","setNewPlant","file","setFile","nameHandler","e","target","value","speciesHandler","notesHandler","dateHandler","frequencyHandler","fileHandler","files","uploadPlant","prop","a","uid","currentUser","user","collection","doc","newPlantRef","plant","photo","nextwatering","set","then","onNewPlant","addPlant","ref","child","put","on","snapshot","error","getDownloadURL","url","trigger","className","modal","close","onClick","preventDefault","href","onSubmit","htmlFor","placeholder","onChange","required","onBlur","type","min","Navbar","logoutHandler","changeState","size","length","EditPlant","current","lastWatered","wateringFrequency","setPlant","del","setDel","defaultImg","deleteHandler","clearFields","edit","deletePlant","fileUpload","uploadEdit","deleteImg","refFromURL","delete","catch","err","console","log","toString","onDelete","link","plantRef","merge","onEdit","index","nested","defaultValue","frequency","PlantList","render","setRender","empty","setEmpty","classes","alert","setAlert","rendered","updateWatering","ind","msec","Date","parse","offset","getTimezoneOffset","nextwater","Math","ceil","now","removeFeed","triggerAlert","messages","findIndex","i","splice","push","editFeed","message","al","setTimeout","WateringAlert","num","useEffect","LogoutHandler","data","map","src","alt","width","height","parseInt","Login","setCurrentUser","enteredEmail","setEmail","enteredPassword","setPassword","hasAccount","setHasAccount","emailError","setEmailError","passwordError","setPasswordError","errClass","setErrClass","emailHandler","event","passwordHandler","clearErrors","LoginHandler","signInWithEmailAndPassword","code","RegistrationHandler","createUserWithEmailAndPassword","authListener","signOut","sz","ReactDOM","unmountComponentAtNode","document","getElementById","onAuthStateChanged","GetFeed","get","forEach","React","createElement","querySelector","toggleSettings","colorHandler","onFocus","App","Component"],"mappings":"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","file":"static/js/main.e900f6c2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\"; \n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst fire = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL, \n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport const auth = fire.auth(); \nexport const storage = firebase.storage(); \n\nexport default fire;  ","import \"firebase/auth\";\nimport fire from \"./config\"; \nimport \"firebase/firestore\";\n\n\nconst db = fire.firestore(); \n\nexport default db; ","import Popup from 'reactjs-popup'; \nimport React, { useState } from 'react'; \nimport './popup.css'; \nimport './navbar.css'; \nimport db from '../Firebase/db'; \nimport fire, { storage } from '../Firebase/config'; \n\nconst AddPlant = (props) => { \n  const [newPlant, setNewPlant] = useState({\n    id: '', \n    name: '',\n    species: '',\n    lastwatered: '',\n    wateringfrequency: -1,\n    notes: '',\n  }); \n  \n  const [file, setFile] = useState(null); \n\n  const nameHandler = (e) => {\n    setNewPlant({\n      ...newPlant, \n      name: e.target.value, \n    })\n  }; \n  const speciesHandler = (e) => {\n    setNewPlant({\n      ...newPlant, \n      species: e.target.value\n    })\n  }; \n  const notesHandler = (e) => { \n    setNewPlant({\n      ...newPlant, \n      notes: e.target.value\n    })\n  }; \n  const dateHandler = (e) => { \n    setNewPlant({\n      ...newPlant, \n      lastwatered: e.target.value\n    });\n\n  }; \n  const frequencyHandler = (e) => {\n    setNewPlant({\n      ...newPlant, \n      wateringfrequency: e.target.value\n    })\n  }; \n  const fileHandler = (e) => { \n    if (e.target.files[0]) {\n      setFile(e.target.files[0]); \n    }\n  }; \n\n\n\n  const clearFields = () => { \n    setNewPlant({\n      name: '', \n      id: '',\n      species: '', \n      lastwatered: '', \n      nextwatering: '', \n      wateringfrequency: '',\n      notes: '',\n      photo: ''\n    }); \n    setFile(null); \n  }\n\n  async function uploadPlant(prop) { \n    let uid = fire.auth().currentUser.uid;\n    const user =  db.collection('users').doc(uid);\n    let newPlantRef = user.collection(\"plants\").doc(); \n      const plant = { \n        wateringfrequency: newPlant.wateringfrequency, \n        photo: prop, \n        notes: newPlant.notes, \n        name: newPlant.name, \n        id: newPlantRef.id, \n        nextwatering: 0, \n        species: newPlant.species, \n        lastwatered: newPlant.lastwatered\n      }; \n    await newPlantRef.set(plant).then(() => {\n     props.onNewPlant(plant); \n    });  \n  \n  }\n\n  const fileUpload = () => {\n    const uploadTask = storage.ref().child(file.name).put(file);\n    uploadTask.on('state_changed',  \n      snapshot => {}, \n      (error) => {\n      }, \n      () => {\n        storage.ref().child(file.name).getDownloadURL().then( url => {\n          uploadPlant(url); \n        })\n      }\n    )\n  }; \n\n\n   function addPlant() { \n     if (file !== null) { \n       fileUpload(); \n     } else { \n      let defaultImg = \"https://firebasestorage.googleapis.com/v0/b/plant-scheduler.appspot.com/o/default.gif?alt=media&token=ccfeb641-a758-4df3-a9ee-339f9f7b6f29\"; \n       uploadPlant(defaultImg); \n     }\n  }\n\n  return (  \n    <Popup\n    trigger={<button className=\"navbutton\">new plant</button>}\n    modal>\n    {close => (\n      <div className=\"overlay\">\n        <div className=\"box\">\n        <a className=\"close\" onClick={ (e) => {\n          e.preventDefault(); \n          clearFields(); \n          close(); \n        }} href=\"/\"> \n          &times;\n        </a>\n        <div>\n          <h1 className=\"header\">new plant</h1>\n          {\" \"}\n          <form className=\"content\" onSubmit={(e) => { \n            e.preventDefault(); \n             addPlant(); \n            close();\n          } \n          }>\n            <label htmlFor=\"name\"> Name: </label>\n            <input placeholder=\"Name\" id=\"name\" className=\"fields\" onChange={nameHandler} required/><br/>\n            <label htmlFor=\"species\">Species: </label>\n            <input placeholder=\"Species\" id=\"species\" className=\"fields\" onBlur={speciesHandler}/><br/>\n            <label htmlFor=\"date\">The last day you watered it: </label>\n             <input type=\"date\" placeholder=\"Date last watered\" id=\"date\" className=\"fields\" onChange={dateHandler} required/> <br/>\n             <label htmlFor=\"frequency\">How often should we remind you?</label> <br/>\n             <label htmlFor=\"frequency\">\n               Every \n               <input type=\"number\" min=\"1\" className=\"fields\" id=\"frequency\" onBlur={frequencyHandler} required/> \n               day(s).\n             </label><br/>\n             <label htmlFor =\"notes\"> Anything else to remember? </label><br/>  \n              <textarea className=\"fields\" id=\"notes\" onBlur={notesHandler} />\n              <br/>\n             <label htmlFor=\"photo\"> Upload Icon </label>\n              <input type=\"file\" id=\"photo\" onChange={fileHandler}/>\n             <button type=\"submit\">submit</button>\n          </form>\n        </div>\n        </div>\n      </div>\n    )}\n  </Popup>\n  )\n\n\n\n}; \n\n\nexport default AddPlant; ","import React from 'react'; \nimport './navbar.css';\nimport AddPlant from './AddPlant'; \n\nconst Navbar = (props) => { \n\n  return ( \n    <div className=\"nav\"> \n      <button onClick={props.logoutHandler} className=\"navbutton\">log out</button>\n      <AddPlant onNewPlant={props.changeState} size={props.length + 1} /> \n    </div>\n  )\n}\n\nexport default Navbar; ","import Popup from 'reactjs-popup'; \nimport React, { useState } from 'react'; \nimport db from '../Firebase/db'; \nimport './PlantList.css'; \nimport '../Nav/popup.css'; \nimport fire, { storage } from '../Firebase/config'; \n\nconst EditPlant = (props) => {\n  const [plant, setPlant] = useState({\n    id: props.current.id, \n    name: props.current.name,\n    species: props.current.species,\n    lastWatered: props.current.lastwatered,\n    wateringFrequency: props.current.wateringfrequency,\n    notes: props.current.notes\n  }); \n\n  const [file, setFile] = useState(null); \n  const [del, setDel] = useState(false); \n  let url = props.current.photo; \n  const defaultImg = \"https://firebasestorage.googleapis.com/v0/b/plant-scheduler.appspot.com/o/default.gif?alt=media&token=ccfeb641-a758-4df3-a9ee-339f9f7b6f29\"; \n  const uid = fire.auth().currentUser.uid;\n\n  const nameHandler = (e) => {\n    if (plant.name !== e.target.value && e.target.value !== null) { \n      setPlant({\n        ...plant, \n        name: e.target.value\n      })\n    }\n  };\n  const speciesHandler = (e) => {\n    if (plant.species !== e.target.value && e.target.value !== null) { \n      setPlant({\n        ...plant, \n        species: e.target.value\n      })\n    }\n  }; \n  const dateHandler = (e) => {\n    if (plant.lastWatered !== e.target.value && e.target.value !== null) { \n      setPlant({\n        ...plant, \n        lastWatered: e.target.value\n      });\n    }\n  }; \n\n  const notesHandler = (e) => {\n    if (plant.notes !== e.target.value && e.target.value !== null) { \n      setPlant({\n        ...plant, \n        notes: e.target.value\n      })\n    }\n  }; \n  const fileHandler = (e) => {\n    if (e.target.files[0]) {\n      setFile(e.target.files[0]); \n    }\n\n   }; \n\n  const frequencyHandler = (e) => {\n    if (plant.wateringFrequency !== e.target.value && e.target.value !== null) { \n      setPlant({\n        ...plant, \n        name: e.target.value\n      })\n    }\n  }; \n  const deleteHandler = () => { \n    setDel(!del); \n  }; \n\n  function clearFields() { \n   // setPlant({\n     // id: '',\n     // name: '',\n     // species: '',\n     // lastWatered: '',\n     // wateringFrequency: '',\n     // notes: '',\n     // photo: ''\n   // })\n   // setFile(null);  \n     setDel(false); \n   }; \n\n  function edit() { \n    if (del) { \n      deletePlant(); \n    }\n    else if (file) { \n      fileUpload(); \n    }\n    else { \n      uploadEdit(url); \n    }\n  }\n\n  async function deleteImg() { \n    const imageRef = storage.refFromURL(url); \n    imageRef.delete().catch(err => { console.log(err)}); \n  }\n\n  async function deletePlant() { \n    const user =  db.collection('users').doc(uid); \n    await user.collection('plants').doc(props.current.id.toString()).delete().then(() => {\n      if (url !== defaultImg) { \n        deleteImg(); \n      } \n      props.onDelete(props.current.id, props.current.name); \n  \n      }); \n  };   \n\n  const fileUpload = () => {\n    const uploadTask = storage.ref().child(file.name).put(file);\n    uploadTask.on('state_changed',  \n      snapshot => {}, \n      (error) => {\n        console.log(error); \n      }, \n      () => {\n        storage.ref().child(file.name).getDownloadURL().then( url => {\n          uploadEdit(url);    \n        })\n      }\n    )\n  }; \n\n\n  async function uploadEdit(link) {\n    const user =  db.collection('users').doc(uid);\n    const plantRef = user.collection('plants').doc(plant.id.toString()); \n    const doc = { //make this more efficient?? \n      name: plant.name, \n      species: plant.species, \n      lastwatered: plant.lastWatered, \n      nextwatering: 0, \n      notes: plant.notes, \n      photo: link,\n      wateringfrequency: plant.wateringFrequency\n    }\n\n    plantRef.set(doc, { merge: true }).then(() => {\n      clearFields(); \n      props.onEdit(doc, props.index); \n    }); \n     \n  }\n\n\n  return (  \n    <Popup\n    trigger={<button className=\"edit\">edit info </button>}\n    modal nested>\n    {close => (\n      <div className=\"overlay\">\n        <div className=\"box\" id=\"ext\">\n        <a className=\"close\" onClick={ (e) => {\n          e.preventDefault(); \n          clearFields(); \n          close(); \n        }} href=\"/\"> \n          &times;\n        </a>\n        <div>\n        <h1 className=\"header\">edit {props.current.name} </h1>\n          {\" \"}\n          <form className=\"content\" onSubmit={(e) => { \n            e.preventDefault();\n             edit(); \n            close();\n          } \n          }>\n            <label htmlFor=\"edit-nm\">Name: </label>\n            <input defaultValue={plant.name} id=\"edit-nm\" className=\"fields\" onChange={nameHandler}/> <br/> \n            <label htmlFor=\"edit-spec\">Species: </label>\n            <input defaultValue={plant.species} id=\"edit-spec\" className=\"fields\" onChange={speciesHandler}/>\n            <br/> \n            <label htmlFor=\"edit-date\">Last Watered: </label>\n             <input type=\"date\" defaultValue={plant.lastWatered} className=\"fields\" id=\"edit-date\" onChange={dateHandler}/> <br/>\n             <label htmlFor=\"edit-freq\">Watering Frequency: </label>\n             <input type=\"number\" className=\"fields\" defaultValue={plant.frequency} id=\"edit-freq\" onChange={frequencyHandler}/> <br/>\n             <label htmlFor=\"edit-notes\">Additional Notes: </label>\n             <textarea defaultValue={plant.notes} id=\"edit-notes\" className=\"fields\" onChange={notesHandler} /> <br/> \n             <label htmlFor=\"edit-photo\">Upload Photo:  </label>\n             <input type=\"file\" placeholder=\"Upload Photo\" value={plant.photo} id=\"edit-photo\" onChange={fileHandler} /> <br/> <br/>\n              <label htmlFor=\"deleted\"> Delete Plant </label>\n              <input type=\"radio\" onChange={deleteHandler} id=\"deleted\" name=\"deleted\" className=\"fields\"/> \n             <p id=\"error\">\n             </p>\n             <button type=\"submit\" id=\"save\">save changes</button>\n          </form>\n        </div>\n        </div>\n      </div>\n    )}\n  </Popup>\n  )\n\n\n\n}; \n\n\nexport default EditPlant; ","import React, { useState, useEffect } from 'react'; \nimport Navbar from '../Nav/navbar'; \nimport EditPlant from './EditPlant'; \n\nfunction PlantList(props) {\n    const [render, setRender] = useState(false); \n    const [empty, setEmpty] = useState(false); \n    const [alert, setAlert] = useState({\n      classes: '', \n      name: ''\n    });\n    let rendered = props.rendered; \n\n    function updateWatering(doc, ind) { \n        const msec = Date.parse(doc.lastwatered) + (doc.wateringfrequency * 86400000); \n        const offset = new Date().getTimezoneOffset() * 60000; \n        let nextwater = (Math.ceil(( (msec) - (Date.now()) + offset) / 86400000)); \n        doc = { \n          ...doc, \n          nextwatering: nextwater\n        }; \n        rendered[ind] = doc; \n        setRender(!render); \n    }\n\n    function removeFeed(id, name) { \n      let props = {\n        classes: 'alert', \n        messages: name + \" was successfully deleted.\"\n      }; \n      triggerAlert(props); \n      let index = rendered.findIndex(i => i.id === id); \n      rendered.splice(index, 1); \n      if (rendered.length === 0) { \n        rendered.push(0); \n        setEmpty(true); \n      } else {\n        setEmpty(false); \n      }\n    }\n\n    function editFeed(doc, index) {\n      updateWatering(doc, index); \n      let props = { \n        classes: 'alert', \n        message: \"Saved changes to \" + doc.name + \".\"\n      }\n      triggerAlert(props); \n    }\n    \n    function addFeed(data) { \n      if (rendered[0] === 0) {\n        rendered.splice(0, 1); \n      }\n      rendered.push(data); \n      updateWatering(data, (rendered.length - 1)); \n      let props = { \n        classes: 'alert', \n        message: \"Successfully added \" + data.name + \".\"\n      }\n      triggerAlert(props); \n      setEmpty(false); \n    }; \n\n    function triggerAlert(al) { \n      if (al) {\n        setAlert({\n          message: al.message, \n          classes: al.classes\n      }); \n      setTimeout(function(){ setAlert({\n        message: '', \n        classes: ''\n      }); }, 4000);\n    }\n    }; \n\n    function WateringAlert(props) {\n      if (props.num === 0) { \n        return <p>just in time! make sure to water that thang today girl</p>\n      } else if (props.num < 0) { \n        if (props.num === -1) { return <p>Fuck bro ur killing ur plant!!! it's been like {props.num.toString() * -1} day! go!</p>}\n        return <p>Fuck bro ur killing ur plant!!! it's been like {props.num.toString() * -1} days! go!</p>\n      } else if (props.num === 1) { \n        return <p>You next watering is tomorrow.</p>\n      }\n       else { \n       return <p>Your next watering is in {props.num.toString()} days.</p>\n      }\n    }; \n\n    useEffect(() => {\n      if (rendered[0] === 0 || rendered.empty) { \n        setEmpty(true); \n      } else {\n        setEmpty(false); \n      }\n    }, [rendered]); \n\n   \n    return (\n      <div>\n        <div>\n        <Navbar logoutHandler={props.LogoutHandler} length={rendered.length} changeState={addFeed}  /> \n        </div>\n        <p className={alert.classes} value={alert}>{alert.message}</p>\n\n      <div id=\"list\" value={empty}>\n        {!empty ? (\n            rendered.map((doc, ind) => \n            <div key={ind} value={doc} className=\"card\"> \n            <img src={doc.photo} alt=\"\" width=\"500\" height=\"500\" className=\"photo\"/>\n            <p>{doc.name} </p>\n            <p>\n            last watered on {doc.lastwatered}\n            </p>\n            {(doc.species !== '') ? (\n              <p>\n                species: {doc.species} </p>\n            ) : (null)}\n            {(doc.notes !== '') ? (\n              <p>\n                additional notes: {doc.notes}\n              </p>\n            ): (null)}\n            <WateringAlert num={parseInt(doc.nextwatering)} value={doc.nextwatering}></WateringAlert>\n            <EditPlant current={doc} onEdit={editFeed} onDelete={removeFeed} index={ind} className=\"edit\"/> \n              </div>)\n          \n        ) : ( \n          <h1 className=\"new-plant\"> click 'neW plAnt' to Get started. </h1>\n        )}\n \n      </div>\n      </div>\n      \n    );\n\n}; \n\n\nexport default PlantList;  ","import React, { useState, useEffect } from 'react'; \nimport ReactDOM from 'react-dom'; \nimport \"firebase/auth\"; \nimport fire from \"../Firebase/config\"; \nimport './Login.css'; \nimport db from '../Firebase/db'; \nimport PlantList from '../PlantList/PlantList';\n\nconst Login = () => { \n  const [currentUser, setCurrentUser] = useState(''); \n  const [enteredEmail, setEmail] = useState('');\n  const [enteredPassword, setPassword] = useState(''); \n  const [hasAccount, setHasAccount] = useState(true); \n  const [emailError, setEmailError] = useState(''); \n  const [passwordError, setPasswordError] = useState(''); \n  const [errClass, setErrClass] = useState('not-auth'); \n  const rendered = [0]; \n\n  const emailHandler = (event) => { \n    setEmail(event.target.value); \n  };\n  const passwordHandler = (event) => { \n    setPassword(event.target.value); \n  };\n  const clearErrors = () => { \n    setEmailError(''); \n    setPasswordError(''); \n  };\n  const clearFields = () => { \n    setEmail(''); \n    setHasAccount(true); \n    setEmailError(''); \n    setPassword(''); \n    setErrClass('not-auth'); \n   }; \n\n  const LoginHandler = (event) => {\n    event.preventDefault(); \n    clearErrors(); \n    fire.auth().signInWithEmailAndPassword(enteredEmail, enteredPassword)\n    .catch(error => { \n        switch(error.code) { \n          case \"auth/invalid-email\":\n          case \"auth/user-not-found\":\n            setErrClass('not-auth error'); \n            setEmailError(error.message); \n            break; \n          case \"auth/wrong-password\":\n            setErrClass('not-auth error'); \n            setPasswordError(error.message);\n            setPassword(''); \n            break;\n          default:\n        }\n\n    });  \n  };\n\n\n\n  const RegistrationHandler = (event) => {\n    event.preventDefault(); \n    clearErrors(); \n    fire.auth().createUserWithEmailAndPassword(enteredEmail, enteredPassword)\n    .catch(error => { \n        switch(error.code) { \n          case \"auth/invalid-email\":\n          case \"auth/email-already-in-use\":\n            setEmailError(error.message); \n            setErrClass('not-auth error'); \n            break; \n          case \"auth/weak-password\":\n            setPasswordError(error.message);\n            setErrClass('not-auth error');  \n            break;\n          default:\n            authListener(); \n        }\n    });    \n    \n  };\n\n\n\n  const LogoutHandler = () => { \n    fire.auth().signOut().then(() => {\n        clearFields(); \n        let sz = rendered.length; \n        rendered.splice(0, sz); \n        rendered.push(0); \n      ReactDOM.unmountComponentAtNode(document.getElementById(\"plantlist\")); \n      setCurrentUser('');\n    })\n  };\n\n  const authListener = () => { \n    fire.auth().onAuthStateChanged(user => { \n      if(user) { \n        if (user.uid !== currentUser.uid) { \n           const use = user;\n          setCurrentUser(use);\n          GetFeed(user.uid); \n        }\n         \n      } else { \n        if ('' !== currentUser) { \n          setCurrentUser('');\n        }\n        \n      }\n  })\n  };\n\n  async function GetFeed(id) { \n    var user = db.collection('users').doc(id); \n      await user.collection('plants').get().then(snapshot => { \n       if (!snapshot.empty) {  \n          rendered.splice(0, rendered.length); \n          snapshot.forEach(plant => {\n              let doc = plant.data(); \n              const msec = Date.parse(doc.lastwatered) + (doc.wateringfrequency * 86400000); \n              const offset = new Date().getTimezoneOffset() * 60000; \n              let nextwater = (Math.ceil(( (msec) - (Date.now()) + offset) / 86400000)); \n              doc = { \n                ...doc, \n                nextwatering: nextwater\n              }\n              rendered.push(doc); \n          });     \n       }\n       ReactDOM.render(React.createElement(PlantList, {rendered: rendered, LogoutHandler},  null), document.querySelector(\"#plantlist\"));\n\n        }\n    ); \n  }; \n\n  useEffect(() => {  \n    authListener(); \n  });\n\n  const toggleSettings = () => { \n    setHasAccount(!hasAccount); \n    colorHandler();\n    clearErrors(); \n  }; \n\n  const colorHandler = () => { \n    setErrClass('not-auth'); \n  }\n  \n  function handleLogin() { \n    if (currentUser === '') { \n      return (\n        <form>\n        <div className=\"login\">\n          <label className=\"input-label\">Email</label>\n          <input type=\"email\" id=\"username\" className={errClass} onChange={emailHandler} onFocus={colorHandler} required/>\n          <label className=\"input-label\">Password</label>\n          <input type=\"password\" id=\"pass\" className={errClass} onChange={passwordHandler} onFocus={colorHandler} required  />\n          <p className=\"errorMsg\">{passwordError}{emailError}</p>\n          <div className=\"btnContainer\">\n            {hasAccount ? (\n              <>\n              <button onClick={LoginHandler} className='login-reg'>sign in</button>\n              <p>Don't have an account? <span onClick={toggleSettings} className=\"hover\"><br/>Sign up</span></p>\n              </> \n            ) : (\n              <>\n              <button type=\"submit\" className='login-reg' onClick={RegistrationHandler}>Register</button>\n              <p>Already have an account? <br/> <span onClick={toggleSettings} className=\"hover\">Sign In</span></p>\n              </>\n            )}\n          </div>\n        </div>\n      </form>\n      ); \n\n    }\n     else { \n      return (\n        <div>\n          Loading....\n        </div>\n      ); \n\n    }\n \n  }\n\n\n  return (\n      <div> \n        {currentUser ? ( \n          <div id=\"plantlist\">\n          </div> \n        ) : \n            (handleLogin())}\n      </div>\n       \n     \n    ); \n}; \n\nexport default Login; ","import Login from './components/User/Login'; \nimport React, { Component }  from 'react'; \nimport \"./App.css\"; \n\nclass App extends Component {\n  render() { \n    return (\n      <div>\n        <h2 className=\"main\">plAnt scHeduleR</h2>\n        <Login></Login>\n        <div id=\"home\">\n        </div>\n      </div>\n    );\n\n  }\n\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}